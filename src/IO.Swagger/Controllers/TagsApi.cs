/*
 * StackOverflow Core Features
 *
 * This is the documentation of the StackOverflow's core features assignment.  You can find out more about Swagger at [http://swagger.io](http://swagger.io)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ali.h2030@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TagsApiController : ControllerBase
    { 
        /// <summary>
        /// Assigning new tag to a question
        /// </summary>
        
        /// <param name="body">Tag type and quesiton to assign the tag to</param>
        /// <response code="200">Answer was added successfully</response>
        /// <response code="405">Invalid input</response>
        [HttpPost]
        [Route("/v2/AssignTagToQuestion")]
        [ValidateModelState]
        [SwaggerOperation("AddTagToQuestion")]
        public virtual IActionResult AddTagToQuestion([FromBody]Tags body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);

            //TODO: Uncomment the next line to return response 405 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(405);


            throw new NotImplementedException();
        }
    }
}
